name: API Tests

on: [push]

jobs:
  postman-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16  # Matches common production versions
        env:
          POSTGRES_DB: agrotech_db  # From .env
          POSTGRES_USER: snipher    # From .env
          POSTGRES_PASSWORD: snipher8431  # From .env
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12  # Recommended stable version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      env:
        DATABASE_NAME: agrotech_db
        DATABASE_USER: snipher
        DATABASE_PASSWORD: snipher8431
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
      run: |
        python manage.py migrate

    - name: Install Newman
      run: npm install -g newman

    - name: Run Server & Tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}  # From .env
        DATABASE_NAME: agrotech_db
        DATABASE_USER: snipher
        DATABASE_PASSWORD: snipher8431
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
      run: |
        # Start server in background
        python manage.py runserver 127.0.0.1:8000 &
        
        # Wait for server to start
        sleep 15
        
        # Run Postman tests
        newman run postman/coldstore-api.postman_collection.json \
          -e postman/postman-environment.json \
          --reporters cli,json \